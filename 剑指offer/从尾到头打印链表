输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。

 

示例 1：

输入：head = [1,3,2]
输出：[2,3,1]

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */

递归

class Solution {
public:
    vector<int> reversePrint(ListNode* head) {

        vector<int> res;
        
        if ( head == null )
            return res;
        
        reversePrint(head->next);
        res.push_back(head->val);
        
        return res;
    
    }
};

辅助栈

class Solution {
public:
    vector<int> reversePrint(ListNode* head) {

        stack<int> res;
        vector<int> ans;

        while ( head != NULL ) {

            res.push(head->val);
            head = head->next;

        }

        while ( !res.empty() ) {

            ans.push_back(res.top());
            res.pop();

        }

        return ans;

    }
};

把n个骰子扔在地上，所有骰子朝上一面的点数之和为s。输入n，打印出s的所有可能的值出现的概率。

 

你需要用一个浮点数数组返回答案，其中第 i 个元素代表这 n 个骰子所能掷出的点数集合中第 i 小的那个的概率。

 

示例 1:

输入: 1
输出: [0.16667,0.16667,0.16667,0.16667,0.16667,0.16667]
示例 2:

输入: 2
输出: [0.02778,0.05556,0.08333,0.11111,0.13889,0.16667,0.13889,0.11111,0.08333,0.05556,0.02778]

class Solution {
public:
    vector<double> dicesProbability(int n) {
        vector<double> ret;
        ret.push_back(1.0);
        ret.resize(5 * n + 1);
        for (int i = 1;i <= n;++i) {
            for (int j = 5 * i;0 <= j;--j) {
                double p = 0.0;
                switch (min(j, 5)) {
                case 5:p += ret[j - 5];
                case 4:p += ret[j - 4];
                case 3:p += ret[j - 3];
                case 2:p += ret[j - 2];
                case 1:p += ret[j - 1];
                case 0:p += ret[j];
                default:break;
                }
                ret[j] = p / 6.0;
            }
        }
        return ret;
    }
};


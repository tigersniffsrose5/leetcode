从上到下按层打印二叉树，同一层的节点按从左到右的顺序打印，每一层打印到一行。

 

例如:
给定二叉树: [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
返回其层次遍历结果：

[
  [3],
  [9,20],
  [15,7]
]

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        queue<TreeNode *> q;
        vector<vector<int>> res;
        q.push(root);

        if ( root == nullptr )
            return res;

        TreeNode *temp;
        while ( !q.empty() ) {
            
            int size = q.size();

            vector<int> level;
            for ( int i = 0; i < size; ++i ) {
                temp = q.front();
                q.pop();
                level.push_back(temp->val);
                if ( temp->left )
                    q.push(temp->left);
                if ( temp->right )
                    q.push(temp->right);
            }

            res.push_back(level);
        }

        return res;

    }
};

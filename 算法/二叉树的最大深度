给定一个二叉树，找出其最大深度。

二叉树的深度为根节点到最远叶子节点的最长路径上的节点数。

说明: 叶子节点是指没有子节点的节点。

示例：
给定二叉树 [3,9,20,null,null,15,7]，

    3
   / \
  9  20
    /  \
   15   7
返回它的最大深度 3 。

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

递归：
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if (root == nullptr) 
            return 0;
        return max(maxDepth(root->left), maxDepth(root->right)) + 1;
    }
};

BFS：
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if (root == nullptr) 
            return 0;
        queue<TreeNode *> q;
        q.push(root);
        int ans = 0;
        while ( !q.empty() ) {
            int sz = q.size();
            while ( sz > 0 ) {
                TreeNode *node = q.front();
                q.pop();
                if ( node->left )
                    q.push(node->left);
                if ( node->right )
                    q.push(node->right);
                sz-=1;
            }
            ans++;
        }
        return ans;
    }
};
